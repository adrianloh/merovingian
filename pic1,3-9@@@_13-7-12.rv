GTOa (3)

rv : RVSession (2)
{
    session
    {
        string viewNode = "defaultSequence"
        int marks = [ ]
        int[2] range = [ [ 1 10 ] ]
        int[2] region = [ [ 1 10 ] ]
        float fps = 24
        int realtime = 0
        int inc = 1
        int currentFrame = 4
        int version = 1
        int background = 0
    }
}

connections : connection (1)
{
    evaluation
    {
        string lhs = [ "sourceGroup000000" "sourceGroup000000" "sourceGroup000000" "defaultSequence" ]
        string rhs = [ "defaultLayout" "defaultSequence" "defaultStack" "displayGroup" ]
    }

    top
    {
        string nodes = [ "defaultLayout" "defaultSequence" "defaultStack" "sourceGroup000000" ]
    }
}

defaultLayout : RVLayoutGroup (1)
{
    ui
    {
        string name = "Default Layout"
    }

    layout
    {
        string mode = "packed"
    }

    timing
    {
        int retimeInputs = 1
    }
}

defaultLayout_paint : RVPaint (2)
{
    paint
    {
        int nextId = 0
        int nextAnnotationId = 0
        int show = 1
        string exclude = [ ]
        string include = [ ]
    }
}

defaultLayout_stack : RVStack (1)
{
    output
    {
        float fps = 24
        int size = [ 3328 4992 ]
        int autoSize = 1
        string chosenAudioInput = ".all."
    }

    mode
    {
        int useCutInfo = 1
        int alignStartFrames = 0
        int strictFrameRanges = 0
    }

    composite
    {
        string type = "over"
    }
}

defaultLayout_t_sourceGroup000000 : RVTransform2D (1)
{
    transform
    {
        int flip = 0
        int flop = 0
        float rotate = 0
        float[2] translate = [ [ 0 0 ] ]
        float[2] scale = [ [ 1 1 ] ]
    }

    pixel
    {
        float aspectRatio = 0
    }

    stencil
    {
        float visibleBox = [ 0 1 0 1 ]
    }
}

defaultSequence : RVSequenceGroup (1)
{
    ui
    {
        string name = "Default Sequence"
    }

    timing
    {
        int retimeInputs = 1
    }

    session
    {
        int marks = [ ]
        int frame = 4
        float fps = 24
    }
}

defaultSequence_p_sourceGroup000000 : RVPaint (2)
{
    paint
    {
        int nextId = 0
        int nextAnnotationId = 0
        int show = 1
        string exclude = [ ]
        string include = [ ]
    }
}

defaultSequence_sequence : RVSequence (1)
{
    edl
    {
        int source = [ 0 0 ]
        int frame = [ 1 10 ]
        int in = [ 1 0 ]
        int out = [ 9 0 ]
    }

    output
    {
        float fps = 24
        int size = [ 3328 4992 ]
        int interactiveSize = 1
        int autoSize = 1
    }

    mode
    {
        int autoEDL = 1
        int useCutInfo = 1
    }
}

defaultStack : RVStackGroup (1)
{
    ui
    {
        string name = "Default Stack"
    }

    timing
    {
        int retimeInputs = 1
    }
}

defaultStack_p_sourceGroup000000 : RVPaint (2)
{
    paint
    {
        int nextId = 0
        int nextAnnotationId = 0
        int show = 1
        string exclude = [ ]
        string include = [ ]
    }
}

defaultStack_stack : RVStack (1)
{
    output
    {
        float fps = 24
        int size = [ 3328 4992 ]
        int autoSize = 1
        string chosenAudioInput = ".all."
    }

    mode
    {
        int useCutInfo = 1
        int alignStartFrames = 0
        int strictFrameRanges = 0
    }

    composite
    {
        string type = "over"
    }
}

defaultStack_t_sourceGroup000000 : RVTransform2D (1)
{
    transform
    {
        int flip = 0
        int flop = 0
        float rotate = 0
        float[2] translate = [ [ 0 0 ] ]
        float[2] scale = [ [ 1 1 ] ]
    }

    pixel
    {
        float aspectRatio = 0
    }

    stencil
    {
        float visibleBox = [ 0 1 0 1 ]
    }
}

displayGroup_display : RVDisplayColor (1)
{
    lut
    {
        float[16] inMatrix = [ [ 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 ] ]
        float[16] outMatrix = [ [ 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 ] ]
        float lut = [ ]
        float prelut = [ ]
        float scale = 1
        float offset = 0
        string type = "Luminance"
        string name = ""
        string file = ""
        int size = [ 0 0 0 ]
        int active = 0
    }

    color
    {
        string lut = "default"
        string channelOrder = "RGBA"
        int channelFlood = 0
        int premult = 0
        float gamma = 1
        int sRGB = 1
        int Rec709 = 0
        float brightness = -0.425781
        int outOfRange = 0
        int active = 1
    }
}

displayGroup_soundtrack : RVSoundTrack (1)
{
    audio
    {
        float volume = 1
        float balance = 0
        float offset = 0
        float internalOffset = 0
        int mute = 0
    }

    visual
    {
        int width = 0
        int height = 0
        int frameStart = 0
        int frameEnd = 0
    }
}

displayGroup_stereo : RVDisplayStereo (1)
{
    stereo
    {
        int swap = 0
        float relativeOffset = 0
        float rightOffset = 0
        string type = "off"
    }

    rightTransform
    {
        int flip = 0
        int flop = 0
        float rotate = 0
        float[2] translate = [ [ 0 0 ] ]
    }
}

displayGroup_transform : RVDispTransform2D (1)
{
    transform
    {
        float[2] translate = [ [ 0 0 ] ]
        float[2] scale = [ [ 1 1 ] ]
    }
}

sourceGroup000000 : RVSourceGroup (1)
{
    ui
    {
        string name = "pic1,3-9@@@_13-7-12"
    }
}

sourceGroup000000_cacheLUT : RVCacheLUT (1)
{
    lut
    {
        float[16] inMatrix = [ [ 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 ] ]
        float[16] outMatrix = [ [ 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 ] ]
        float lut = [ ]
        float prelut = [ ]
        float scale = 1
        float offset = 0
        string type = "Luminance"
        string name = ""
        string file = ""
        int size = [ 0 0 0 ]
        int active = 0
    }

    color
    {
        string lut = "default"
    }
}

sourceGroup000000_channelMap : RVChannelMap (1)
{
    format
    {
        string channels = [ ]
    }
}

sourceGroup000000_color : RVColor (1)
{
    lut
    {
        float[16] inMatrix = [ [ 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 ] ]
        float[16] outMatrix = [ [ 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 ] ]
        float lut = [ ]
        float prelut = [ ]
        float scale = 1
        float offset = 0
        string type = "Luminance"
        string name = ""
        string file = ""
        int size = [ 0 0 0 ]
        int active = 0
    }

    color
    {
        string lut = "default"
        int alphaType = 0
        int normalize = 0
        int logtype = 0
        int YUV = 0
        int invert = 0
        int sRGB2linear = 1
        int Rec709ToLinear = 0
        float[3] gamma = [ [ 1.82422 1.82422 1.82422 ] ]
        float[3] offset = [ [ 0 0 0 ] ]
        float[3] scale = [ [ 1 1 1 ] ]
        float[3] exposure = [ [ 0 0 0 ] ]
        float[3] contrast = [ [ 0.514648 0.514648 0.514648 ] ]
        float saturation = 1.83203
        float hue = 0
        int active = 1
        int ignoreChromaticities = 0
    }

    cineon
    {
        int whiteCodeValue = 685
        int blackCodeValue = 95
    }

    CDL
    {
        float[3] slope = [ [ 1 1 1 ] ]
        float[3] offset = [ [ 0 0 0 ] ]
        float[3] power = [ [ 1 1 1 ] ]
        float saturation = 1
    }

    luminanceLUT
    {
        float lut = [ ]
        float max = 1
        string type = "Luminance"
        int size = 0
        string name = ""
        int active = 0
    }

    "luminanceLUT:output"
    {
        int size = 256
    }
}

sourceGroup000000_format : RVFormat (1)
{
    geometry
    {
        int xfit = 0
        int yfit = 0
        int xresize = 0
        int yresize = 0
        float scale = 1
        string resampleMethod = "area"
    }

    color
    {
        int maxBitDepth = 0
        int allowFloatingPoint = 1
    }

    crop
    {
        int active = 0
        int xmin = 0
        int ymin = 0
        int xmax = 0
        int ymax = 0
    }

    uncrop
    {
        int active = 0
        int width = 0
        int height = 0
        int x = 0
        int y = 0
    }
}

sourceGroup000000_histogram : RVHistogram (1)
{
    node
    {
        int active = 0
    }

    histogram
    {
        int size = 100
    }
}

sourceGroup000000_look : RVLookLUT (1)
{
    lut
    {
        float[16] inMatrix = [ [ 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 ] ]
        float[16] outMatrix = [ [ 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 ] ]
        float lut = [ ]
        float prelut = [ ]
        float scale = 1
        float offset = 0
        string type = "Luminance"
        string name = ""
        string file = ""
        int size = [ 0 0 0 ]
        int active = 0
    }

    color
    {
        string lut = "default"
    }
}

sourceGroup000000_overlay : RVOverlay (1)
{
    overlay
    {
        int nextRectId = 0
        int nextTextId = 0
        int show = 1
    }
}

sourceGroup000000_paint : RVPaint (2)
{
    paint
    {
        int nextId = 0
        int nextAnnotationId = 0
        int show = 1
        string exclude = [ ]
        string include = [ ]
    }
}

sourceGroup000000_source : RVFileSource (1)
{
    media
    {
        string movie = "C:/Users/adrianloh/Desktop/MV/pic1,3-9@@@_13-7-12.jpg"
    }

    group
    {
        float fps = 24
        float volume = 1
        float audioOffset = 0
        int rangeOffset = 0
        int noMovieAudio = 0
        float balance = 0
        float crossover = 0
    }

    cut
    {
        int in = -2147483647
        int out = 2147483647
    }

    request
    {
        int readAllChannels = 0
        string imageLayerSelection = [ ]
        string imageViewSelection = [ ]
        string stereoViews = [ ]
    }

    proxy
    {
        int[2] range = [ [ 1 10 ] ]
        int inc = 1
        int[2] size = [ [ 3328 4992 ] ]
    }
}

sourceGroup000000_sourceStereo : RVSourceStereo (1)
{
    stereo
    {
        int swap = 0
        float relativeOffset = 0
        float rightOffset = 0
    }

    rightTransform
    {
        int flip = 0
        int flop = 0
        float rotate = 0
        float[2] translate = [ [ 0 0 ] ]
    }
}

sourceGroup000000_transform2D : RVTransform2D (1)
{
    transform
    {
        int flip = 0
        int flop = 0
        float rotate = 0
        float[2] translate = [ [ 0 0 ] ]
        float[2] scale = [ [ 1 1 ] ]
    }

    pixel
    {
        float aspectRatio = 0
    }

    stencil
    {
        float visibleBox = [ 0 1 0 1 ]
    }
}
